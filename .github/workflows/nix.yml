name: nix
on: [push, pull_request]

jobs:

  test:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          - macos-12
        generator:
          - Ninja
        configuration:
          - Release
    runs-on: ${{ matrix.platform }}
    env:
      build_dir: .build
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install Ninja on Linux
        if: matrix.generator == 'Ninja' && runner.os == 'Linux'
        run: sudo apt install ninja-build
      - name: install Ninja on OSX
        if: matrix.generator == 'Ninja' && runner.os == 'macOS'
        run: brew install ninja
      - name: install nproc on OSX
        if: runner.os == 'macOS'
        run: brew install coreutils
      - name: choose Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: learn Python cache directory
        id: pip-cache
        run: |
          sudo pip install --upgrade pip
          echo "::set-output name=dir::$(pip cache dir)"
      - name: restore Python cache directory
        uses: actions/cache@v2
        with:
            path: ${{ steps.pip-cache.outputs.dir }}
            key: ${{ runner.os }}-${{ hashFiles('.github/workflows/nix.yml') }}
      - name: install Conan
        run: pip install wheel 'conan~=1.52'
      - name: check environment
        run: |
          echo ${PATH} | tr ':' '\n'
          python --version
          conan --version
          cmake --version
          env
      - name: configure Conan
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.cppstd=20 default
      - name: configure Conan on Linux
        if: runner.os == 'Linux'
        run: |
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile update env.CC=${{ matrix.profile.cc }} default
          conan profile update env.CXX=${{ matrix.profile.cxx }} default
          conan profile update conf.tools.build:compiler_executables='{"c": "${{ matrix.profile.cc }}", "cpp": "${{ matrix.profile.cxx }}"}' default
      - name: checkout
        uses: actions/checkout@v3
      - name: dependencies
        uses: ./.github/actions/dependencies
        with:
          configuration: ${{ matrix.configuration }}
      - name: archive cache
        run: tar -czf conan.tar -C ~/.conan .
      - name: upload cache
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-${{ matrix.compiler }}-${{ matrix.configuration }}
          path: conan.tar


  test:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux
        compiler:
          - gcc
          - clang
        configuration:
          - Debug
          - Release
        cmake-args:
          -
          - "-Dunity=ON"
    needs: dependencies
    runs-on: [self-hosted, heavy]
    container: thejohnfreeman/rippled-build-ubuntu:12e19cd9034b
    env:
      build_dir: .build
    steps:
      - name: download cache
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.platform }}-${{ matrix.compiler }}-${{ matrix.configuration }}
      - name: extract cache
        run: |
          mkdir -p ~/.conan
          tar -xzf conan.tar -C ~/.conan
      - name: check environment
        run: |
          echo ${PATH} | tr ':' '\n'
          conan --version
          cmake --version
          env
          ls ~/.conan
      - name: checkout
        uses: actions/checkout@v3
      - name: build
        run: |
          cmake --build ${build_dir} --target rippled --parallel $(nproc)
      - name: test
        run: |
          ${build_dir}/rippled --unittest --unittest-jobs $(nproc)
